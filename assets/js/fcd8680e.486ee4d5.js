"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[857],{1859:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>o});var r=s(4848),a=s(8453);const t={},l="Template",i={id:"template",title:"Template",description:"Property\u2013Value",source:"@site/docs/template.md",sourceDirName:".",slug:"/template",permalink:"/template",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/intro"}},c={},o=[{value:"Property\u2013Value",id:"propertyvalue",level:2},{value:"Spaces",id:"spaces",level:3},{value:"CSS Variables",id:"css-variables",level:3},{value:"CSS Selectors",id:"css-selectors",level:2},{value:"Selector Chaining",id:"selector-chaining",level:3},{value:"Theme Queries",id:"theme-queries",level:2},{value:"Types",id:"types",level:3},{value:"Device Queries",id:"device-queries",level:2},{value:"Types",id:"types-1",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"template",children:"Template"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="<device>@<theme>.<selector>:<property>_<value>"\n[Devices: phone, tablet, laptop, and pc]\n[Themes: light and dark]\n[Spaces in <value> may be represented by "~"]\n[Variables in <value> may be represented by "--name" instead of "var(--name)"]\n[Chaining of selectors is possible, you can do things like "hover:before:*"]\n\u2014\u2014\u2014\n<device> | Device Media Queries (optional)\n<mode> | Mode Media Queries (optional)\n<selector> | CSS Selectors (optional)\n<property> | CSS Properties\n<value> | value of said properties\n'})}),"\n",(0,r.jsx)(n.h2,{id:"propertyvalue",children:"Property\u2013Value"}),"\n",(0,r.jsx)(n.p,{children:"The property\u2013value template represents the relation between a property and its value in CSS, e.g"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",children:"border-radius: 50%\n"})}),"\n",(0,r.jsx)(n.p,{children:'Here, "border-radius" represents the property while "50%" represents the value.'}),"\n",(0,r.jsx)(n.p,{children:"Now here's the same thing with Synxia:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="border-radius_50%"\n'})}),"\n",(0,r.jsx)(n.p,{children:'As can be seen above, "border-radius" is the property and "50%" is the value with "_" acts as a separator between them.'}),"\n",(0,r.jsx)(n.h3,{id:"spaces",children:"Spaces"}),"\n",(0,r.jsx)(n.p,{children:"But what if I need spaces? Well, you don't need to worry just yet!"}),"\n",(0,r.jsx)(n.p,{children:'Spaces in the value can be represented by "~". For example,'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",children:"background: red !important\n"})}),"\n",(0,r.jsx)(n.p,{children:"would translate to"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="background_red~!important"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Got the hang of it yet?"}),"\n",(0,r.jsx)(n.h3,{id:"css-variables",children:"CSS Variables"}),"\n",(0,r.jsx)(n.p,{children:"What about variables, wouldn't it get hectic if things like"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",children:"content: var(--divContent)\n"})}),"\n",(0,r.jsx)(n.p,{children:"were reused a ton of times?"}),"\n",(0,r.jsx)(n.p,{children:"Well, yes\u2014and that's exactly why you don't need to do"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="content_var(--divContent)"\n'})}),"\n",(0,r.jsx)(n.p,{children:"You can just do this instead"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="content_--divContent"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"css-selectors",children:"CSS Selectors"}),"\n",(0,r.jsx)(n.p,{children:'CSS Selectors are what I call the ":/::" selectors/psuedoelements (hover, before, marked...)'}),"\n",(0,r.jsx)(n.p,{children:"A Synxia example like"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="hover:background-image_url(...)"\n'})}),"\n",(0,r.jsx)(n.p,{children:"would generate"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",children:"tooLongToWrite:hover {\n    background-image: url(...)\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Noticed something yet?"}),"\n",(0,r.jsx)(n.p,{children:'Here ":" is the common separator; selectors are the third in order if we go backwards.'}),"\n",(0,r.jsx)(n.h3,{id:"selector-chaining",children:"Selector Chaining"}),"\n",(0,r.jsx)(n.p,{children:"But how would I chain selectors, you know... like Tailwind does it?"}),"\n",(0,r.jsx)(n.p,{children:'Well, if your was aim is to have "::before" content appear upon hovering\u2014you\'d just have to do this'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="hover:before:content_--divContent"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Simple, right?"}),"\n",(0,r.jsx)(n.h2,{id:"theme-queries",children:"Theme Queries"}),"\n",(0,r.jsx)(n.p,{children:"Theme Queries is just a fancy name for dark mode and light mode support, you know... like Tailwind does it\u2014again."}),"\n",(0,r.jsx)(n.p,{children:"Here's a syntax example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="dark.background_--mainColour"\n'})}),"\n",(0,r.jsx)(n.p,{children:'"." acts as the separator here.'}),"\n",(0,r.jsx)(n.p,{children:"But where's that on our little order?\nWell, going backwards (yet again) would place it at quite a steep fourth place."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="light.hover:background_--lightHoverAccent"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,r.jsx)(n.p,{children:'The types? Yep, you guessed it!\nJust "dark" and "light" for now.'}),"\n",(0,r.jsx)(n.h2,{id:"device-queries",children:"Device Queries"}),"\n",(0,r.jsx)(n.p,{children:"Finally, we've reached the end of our fantastic journey!\nTo begin, Device Queries aren't actually dependant on the device; they use the most probable min and max width instead."}),"\n",(0,r.jsx)(n.p,{children:"Here are some examples as usual"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="phone@font-size_--phoneFontSize\n'})}),"\n",(0,r.jsx)(n.p,{children:'Separator --\x3e "@"!'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'class="tablet@dark.hover:color_--tabletDarkHoverAccent\n'})}),"\n",(0,r.jsx)(n.p,{children:"Fifth, or just the last, place :-)."}),"\n",(0,r.jsx)(n.h3,{id:"types-1",children:"Types"}),"\n",(0,r.jsx)(n.p,{children:"Types again! Though, this time you might not have guessed right."}),"\n",(0,r.jsx)(n.p,{children:'The types are: "phone", "tablet", "laptop", and "pc".'})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var r=s(6540);const a={},t=r.createContext(a);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);